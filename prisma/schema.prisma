// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["mongoDb"]
}

model Collections {
  id        String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  type      String   @unique
  slugs     String[]
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model Collection {
  id                    String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  slug                  String   @unique
  contractAddress       String
  name                  String
  description           String
  bannerImageUrl        String?
  imageUrl              String?
  largeImageUrl         String?
  discordUrl            String?
  externalUrl           String?
  twitterUsername       String?
  instagramUsername     String?
  oneDayVolume          Float
  oneDayChange          Float
  oneDaySales           Int
  oneDayAveragePrice    Float
  sevenDayVolume        Float
  sevenDayChange        Float
  sevenDaySales         Int
  sevenDayAveragePrice  Float
  thirtyDayVolume       Float
  thirtyDayChange       Float
  thirtyDaySales        Int
  thirtyDayAveragePrice Float
  totalVolume           Float
  totalSales            Int
  totalSupply           Int
  numOwners             Int
  averagePrice          Float
  numReports            Int
  marketCap             Float
  floorPrice            Float
  updatedAt             DateTime @updatedAt
  createdAt             DateTime @default(now())
  Asset                 Asset[]
  Trait                 Trait[]
}

model Upcoming {
  id              String   @id @default(dbgenerated()) @map("_id") @db.ObjectId
  name            String
  description     String
  price           Float
  supply          Int
  twitterUsername String?
  discordUrl      String?
  externalUrl     String?
  releaseDate     DateTime
  updatedAt       DateTime @updatedAt
  createdAt       DateTime @default(now())
}

model Asset {
  id           String     @id @default(dbgenerated()) @map("_id") @db.ObjectId
  assetSlug    String     @unique
  tokenId      String
  name         String
  imageUrl     String
  collectionId String     @db.ObjectId
  collection   Collection @relation(fields: [collectionId], references: [id])
  traitIDs     String[]   @db.Array(String)
  traits       Trait[]    @relation(fields: [traitIDs])
  updatedAt    DateTime   @updatedAt
  createdAt    DateTime   @default(now())
}

model Trait {
  id           String     @id @default(dbgenerated()) @map("_id") @db.ObjectId
  slug         String     @unique
  traitType    String
  traitCount   Int
  value        String
  collectionId String     @db.ObjectId
  collection   Collection @relation(fields: [collectionId], references: [id])
  assetIDs     String[]   @db.Array(String)
  assets       Asset[]    @relation(fields: [assetIDs])
  updatedAt    DateTime   @updatedAt
  createdAt    DateTime   @default(now())
}
